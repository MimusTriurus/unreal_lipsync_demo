# Visual Studio 2015 user specific files
.vs/

# Visual Studio Code user specific files
.vscode

# IDEA user specific files
.idea
*.sln.DotSettings.user
*.uproject.DotSettings.user

# ReSharper caches
_ReSharper.Caches/

# Tools cache folders
.gradle
/Tools/gradle/buildSrc/build
/Tools/gradle/.project
/Tools/gradle/.settings/
/Gradle/
/Windows/
/Content/3rdparty

# Visual Studio 2015 database file
*.VC.db

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app
*.ipa

# these project files can be generated by the engine
*.xcodeproj
*.xcworkspace
*.sln
*.suo
*.opensdf
*.sdf
*.VC.db
*.VC.opendb

# Precompiled Assets
SourceArt/**/*.png
SourceArt/**/*.tga

# gitArtifacts
Tools/git/gitArtifacts/gitArtifacts.json

# Binary Files
Binaries/*
Plugins/**/Binaries/*

# Builds
Build/*

# Whitelist PakBlacklist-<BuildConfiguration>.txt files (? TODO - need check)
!Build/*/
Build/*/**
!Build/*/PakBlacklist*.txt

# Don't ignore icon files in Build (NOTE - hard code in UE for Windows builds)
!Build/**/*.ico

# Configuration files generated by the Editor
Saved/*

# Unreal build artefacts
ArchivedBuilds/

# Compiled source files for the engine to use
Intermediate/
Plugins/*/Intermediate/

# Cache files for the editor to use
DerivedDataCache/*

# OS/platform generated files.

# Windows
ehthumbs.db
Thumbs.db

# Mac OS X
.DS_Store
.DS_Store?
.AppleDouble
.LSOverride
._*

# Linux
*~
.directory

# vim
[._]*.s[a-w][a-z]
[._]s[a-w][a-z]
*.un~
Session.vim
.netrwhist
.ctrlp_cache/

# python
*.pyc

# Debugger symbols
*.pdb

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# dotenv
.env
*.env

# virtualenv
venv/
.venv/
ENV/

# Spyder project settings
.spyderproject

# Rope project settings
.ropeproject

# Houdini temp baked data
Content/Tools/HoudiniEngine/Temp

# Version meta
VERSION
!version/
metadata.json

# Generated GameParams
/GameParams/generated/

# WGC generated files
/game_metadata/game.ico
/game_metadata/metadata.xml
/app_type.xml
/game_info.xml
/game_info.xml.bak

# Test environment
/Tools/TestEnv/R3AutoTests

# setup_git_user.bat and print_user_info.py temp file
/Tools/utils/print_user_info_temp_output.txt

/Plugins/
/Content/MetaHumans/
/Content/english_large/
